// Code generated by MockGen. DO NOT EDIT.
// Source: verifible_credential_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	big "math/big"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockVCService is a mock of VCService interface.
type MockVCService struct {
	ctrl     *gomock.Controller
	recorder *MockVCServiceMockRecorder
}

// MockVCServiceMockRecorder is the mock recorder for MockVCService.
type MockVCServiceMockRecorder struct {
	mock *MockVCService
}

// NewMockVCService creates a new mock instance.
func NewMockVCService(ctrl *gomock.Controller) *MockVCService {
	mock := &MockVCService{ctrl: ctrl}
	mock.recorder = &MockVCServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVCService) EXPECT() *MockVCServiceMockRecorder {
	return m.recorder
}

// CreateVinCredential mocks base method.
func (m *MockVCService) CreateVinCredential(vin string, tokenID *big.Int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVinCredential", vin, tokenID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVinCredential indicates an expected call of CreateVinCredential.
func (mr *MockVCServiceMockRecorder) CreateVinCredential(vin, tokenID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVinCredential", reflect.TypeOf((*MockVCService)(nil).CreateVinCredential), vin, tokenID)
}
