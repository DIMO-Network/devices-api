// Code generated by MockGen. DO NOT EDIT.
// Source: tesla_task_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	services "github.com/DIMO-Network/devices-api/internal/services"
	models "github.com/DIMO-Network/devices-api/models"
	gomock "github.com/golang/mock/gomock"
)

// MockTeslaTaskService is a mock of TeslaTaskService interface.
type MockTeslaTaskService struct {
	ctrl     *gomock.Controller
	recorder *MockTeslaTaskServiceMockRecorder
}

// MockTeslaTaskServiceMockRecorder is the mock recorder for MockTeslaTaskService.
type MockTeslaTaskServiceMockRecorder struct {
	mock *MockTeslaTaskService
}

// NewMockTeslaTaskService creates a new mock instance.
func NewMockTeslaTaskService(ctrl *gomock.Controller) *MockTeslaTaskService {
	mock := &MockTeslaTaskService{ctrl: ctrl}
	mock.recorder = &MockTeslaTaskServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTeslaTaskService) EXPECT() *MockTeslaTaskServiceMockRecorder {
	return m.recorder
}

// LockDoors mocks base method.
func (m *MockTeslaTaskService) LockDoors(udai *models.UserDeviceAPIIntegration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LockDoors", udai)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LockDoors indicates an expected call of LockDoors.
func (mr *MockTeslaTaskServiceMockRecorder) LockDoors(udai interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LockDoors", reflect.TypeOf((*MockTeslaTaskService)(nil).LockDoors), udai)
}

// OpenFrunk mocks base method.
func (m *MockTeslaTaskService) OpenFrunk(udai *models.UserDeviceAPIIntegration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenFrunk", udai)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OpenFrunk indicates an expected call of OpenFrunk.
func (mr *MockTeslaTaskServiceMockRecorder) OpenFrunk(udai interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenFrunk", reflect.TypeOf((*MockTeslaTaskService)(nil).OpenFrunk), udai)
}

// OpenTrunk mocks base method.
func (m *MockTeslaTaskService) OpenTrunk(udai *models.UserDeviceAPIIntegration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenTrunk", udai)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OpenTrunk indicates an expected call of OpenTrunk.
func (mr *MockTeslaTaskServiceMockRecorder) OpenTrunk(udai interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenTrunk", reflect.TypeOf((*MockTeslaTaskService)(nil).OpenTrunk), udai)
}

// StartPoll mocks base method.
func (m *MockTeslaTaskService) StartPoll(vehicle *services.TeslaVehicle, udai *models.UserDeviceAPIIntegration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartPoll", vehicle, udai)
	ret0, _ := ret[0].(error)
	return ret0
}

// StartPoll indicates an expected call of StartPoll.
func (mr *MockTeslaTaskServiceMockRecorder) StartPoll(vehicle, udai interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartPoll", reflect.TypeOf((*MockTeslaTaskService)(nil).StartPoll), vehicle, udai)
}

// StopPoll mocks base method.
func (m *MockTeslaTaskService) StopPoll(udai *models.UserDeviceAPIIntegration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StopPoll", udai)
	ret0, _ := ret[0].(error)
	return ret0
}

// StopPoll indicates an expected call of StopPoll.
func (mr *MockTeslaTaskServiceMockRecorder) StopPoll(udai interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopPoll", reflect.TypeOf((*MockTeslaTaskService)(nil).StopPoll), udai)
}

// UnlockDoors mocks base method.
func (m *MockTeslaTaskService) UnlockDoors(udai *models.UserDeviceAPIIntegration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnlockDoors", udai)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UnlockDoors indicates an expected call of UnlockDoors.
func (mr *MockTeslaTaskServiceMockRecorder) UnlockDoors(udai interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnlockDoors", reflect.TypeOf((*MockTeslaTaskService)(nil).UnlockDoors), udai)
}
