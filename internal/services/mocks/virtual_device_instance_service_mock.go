// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/virtual_device_instance_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockVirtualDeviceInstanceService is a mock of VirtualDeviceInstanceService interface.
type MockVirtualDeviceInstanceService struct {
	ctrl     *gomock.Controller
	recorder *MockVirtualDeviceInstanceServiceMockRecorder
}

// MockVirtualDeviceInstanceServiceMockRecorder is the mock recorder for MockVirtualDeviceInstanceService.
type MockVirtualDeviceInstanceServiceMockRecorder struct {
	mock *MockVirtualDeviceInstanceService
}

// NewMockVirtualDeviceInstanceService creates a new mock instance.
func NewMockVirtualDeviceInstanceService(ctrl *gomock.Controller) *MockVirtualDeviceInstanceService {
	mock := &MockVirtualDeviceInstanceService{ctrl: ctrl}
	mock.recorder = &MockVirtualDeviceInstanceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVirtualDeviceInstanceService) EXPECT() *MockVirtualDeviceInstanceServiceMockRecorder {
	return m.recorder
}

// SignHash mocks base method.
func (m *MockVirtualDeviceInstanceService) SignHash(ctx context.Context, childNumber uint32, hash []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignHash", ctx, childNumber, hash)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignHash indicates an expected call of SignHash.
func (mr *MockVirtualDeviceInstanceServiceMockRecorder) SignHash(ctx, childNumber, hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignHash", reflect.TypeOf((*MockVirtualDeviceInstanceService)(nil).SignHash), ctx, childNumber, hash)
}
