// Code generated by MockGen. DO NOT EDIT.
// Source: nhtsa_api_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	services "github.com/DIMO-Network/devices-api/internal/services"
	gomock "github.com/golang/mock/gomock"
)

// MockINHTSAService is a mock of INHTSAService interface.
type MockINHTSAService struct {
	ctrl     *gomock.Controller
	recorder *MockINHTSAServiceMockRecorder
}

// MockINHTSAServiceMockRecorder is the mock recorder for MockINHTSAService.
type MockINHTSAServiceMockRecorder struct {
	mock *MockINHTSAService
}

// NewMockINHTSAService creates a new mock instance.
func NewMockINHTSAService(ctrl *gomock.Controller) *MockINHTSAService {
	mock := &MockINHTSAService{ctrl: ctrl}
	mock.recorder = &MockINHTSAServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINHTSAService) EXPECT() *MockINHTSAServiceMockRecorder {
	return m.recorder
}

// DecodeVIN mocks base method.
func (m *MockINHTSAService) DecodeVIN(vin string) (*services.NHTSADecodeVINResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecodeVIN", vin)
	ret0, _ := ret[0].(*services.NHTSADecodeVINResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecodeVIN indicates an expected call of DecodeVIN.
func (mr *MockINHTSAServiceMockRecorder) DecodeVIN(vin interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecodeVIN", reflect.TypeOf((*MockINHTSAService)(nil).DecodeVIN), vin)
}
