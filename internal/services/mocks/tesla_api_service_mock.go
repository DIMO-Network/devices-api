// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/tesla_api_service.go
//
// Generated by this command:
//
//	mockgen -source=internal/services/tesla_api_service.go -destination=internal/services/mocks/tesla_api_service_mock.go
//

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	services "github.com/DIMO-Network/devices-api/internal/services"
	gomock "go.uber.org/mock/gomock"
)

// MockTeslaAPIService is a mock of TeslaAPIService interface.
type MockTeslaAPIService struct {
	ctrl     *gomock.Controller
	recorder *MockTeslaAPIServiceMockRecorder
}

// MockTeslaAPIServiceMockRecorder is the mock recorder for MockTeslaAPIService.
type MockTeslaAPIServiceMockRecorder struct {
	mock *MockTeslaAPIService
}

// NewMockTeslaAPIService creates a new mock instance.
func NewMockTeslaAPIService(ctrl *gomock.Controller) *MockTeslaAPIService {
	mock := &MockTeslaAPIService{ctrl: ctrl}
	mock.recorder = &MockTeslaAPIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTeslaAPIService) EXPECT() *MockTeslaAPIServiceMockRecorder {
	return m.recorder
}

// CompleteTeslaAuthCodeExchange mocks base method.
func (m *MockTeslaAPIService) CompleteTeslaAuthCodeExchange(authCode, redirectURI, region string) (*services.TeslaAuthCodeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompleteTeslaAuthCodeExchange", authCode, redirectURI, region)
	ret0, _ := ret[0].(*services.TeslaAuthCodeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CompleteTeslaAuthCodeExchange indicates an expected call of CompleteTeslaAuthCodeExchange.
func (mr *MockTeslaAPIServiceMockRecorder) CompleteTeslaAuthCodeExchange(authCode, redirectURI, region any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompleteTeslaAuthCodeExchange", reflect.TypeOf((*MockTeslaAPIService)(nil).CompleteTeslaAuthCodeExchange), authCode, redirectURI, region)
}

// GetVehicles mocks base method.
func (m *MockTeslaAPIService) GetVehicles(token, region string) ([]services.TeslaVehicle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVehicles", token, region)
	ret0, _ := ret[0].([]services.TeslaVehicle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVehicles indicates an expected call of GetVehicles.
func (mr *MockTeslaAPIServiceMockRecorder) GetVehicles(token, region any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVehicles", reflect.TypeOf((*MockTeslaAPIService)(nil).GetVehicles), token, region)
}
