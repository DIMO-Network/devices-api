syntax = "proto3";

option go_package = "github.com/DIMO-Network/devices-api/pkg/grpc";

// more types here: https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Empty

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "pkg/grpc/aftermarket_devices.proto";

package devices;

service UserDeviceService {
  rpc GetUserDevice(GetUserDeviceRequest) returns (UserDevice);
  rpc GetUserDeviceByTokenId(GetUserDeviceByTokenIdRequest)
      returns (UserDevice);
  rpc GetUserDeviceByVIN(GetUserDeviceByVINRequest) returns (UserDevice);
  rpc GetUserDeviceByEthAddr(GetUserDeviceByEthAddrRequest) returns (UserDevice);
  rpc ListUserDevicesForUser(ListUserDevicesForUserRequest)
      returns (ListUserDevicesForUserResponse);
  rpc ApplyHardwareTemplate(ApplyHardwareTemplateRequest)
      returns (ApplyHardwareTemplateResponse);
	rpc GetUserDeviceByAutoPIUnitId(GetUserDeviceByAutoPIUnitIdRequest) returns (UserDeviceAutoPIUnitResponse);
  rpc GetClaimedVehiclesGrowth(google.protobuf.Empty) returns (ClaimedVehiclesGrowth);
  rpc CreateTemplate(CreateTemplateRequest)
      returns (CreateTemplateResponse);
  rpc RegisterUserDeviceFromVIN(RegisterUserDeviceFromVINRequest)
      returns (RegisterUserDeviceFromVINResponse);
  rpc UpdateDeviceIntegrationStatus(UpdateDeviceIntegrationStatusRequest)
      returns (UserDevice);
  rpc GetAllUserDevice(GetAllUserDeviceRequest) returns (stream UserDevice);
  rpc IssueVinCredential(IssueVinCredentialRequest) returns (IssueVinCredentialResponse);
  // used to update metadata properties, currently only ones needed by valuations-api
  rpc UpdateUserDeviceMetadata(UpdateUserDeviceMetadataRequest) returns (google.protobuf.Empty);
  rpc ClearMetaTransactionRequests(google.protobuf.Empty) returns (ClearMetaTransactionRequestsResponse);
  rpc StopUserDeviceIntegration(StopUserDeviceIntegrationRequest) returns (google.protobuf.Empty);
}

message GetUserDeviceByAutoPIUnitIdRequest { string id = 1; }

message GetUserDeviceRequest { string id = 1; }

message GetUserDeviceByVINRequest { string vin = 1; }

message GetUserDeviceByEthAddrRequest { bytes eth_addr = 1; }

message GetUserDeviceByTokenIdRequest { int64 token_id = 1; }

message UpdateUserDeviceMetadataRequest {
  string user_device_id = 1;
  optional string postal_code = 2;
  optional string geo_decoded_country = 3;
  optional string geo_decoded_state_prov = 4;
}

message UserDevice {
  string id = 1;
  string user_id = 2;
  optional uint64 token_id = 3;
  optional google.protobuf.Timestamp opted_in_at = 4;
  optional bytes owner_address = 5;
  // Use aftermarket_device.token_id instead.
  optional uint64 aftermarket_device_token_id = 6 [deprecated = true];
  repeated UserDeviceIntegration integrations = 7;
  optional string vin = 8;
  string device_definition_id = 9;
  optional string device_style_id = 10;
  // Use aftermarket_device.beneficiary instead.
  optional bytes aftermarket_device_beneficiary_address = 11 [deprecated = true];
  optional VinCredential latest_vin_credential = 12;
  bool vin_confirmed = 13;
  string country_code = 14;
  // metadata properties
  string power_train_type = 15;
  string CAN_protocol = 16;
  string postal_code = 17;
  string geo_decoded_country = 18;
  string geo_decoded_state_prov = 19;
  optional AftermarketDevice aftermarket_device = 20;
  optional SyntheticDevice syntheticDevice = 21;
}

message SyntheticDevice {
  uint64 token_id = 1;
  uint64 integration_token_id = 2;
}

message UserDeviceIntegration {
  string id = 1;
  string status = 2; // This is not great, but getting tied to the list seems worse. We may regret this.
  string external_id = 3;
}

message UserDeviceAutoPIUnitResponse {
  string user_device_id = 1;
  string user_id = 2;
  string device_definition_id = 3;
  string device_style_id = 4;
}

message ListUserDevicesForUserRequest { 
  string user_id = 1;
  // Optional: Include any devices with NFTs owned by this address.
  string ethereum_address = 2;
}

message ListUserDevicesForUserResponse { repeated UserDevice user_devices = 1; }

message ApplyHardwareTemplateRequest {
  string user_id = 1;
  string user_device_id = 2;
  string auto_api_unit_id = 3;
  string hardware_template_id = 4;
}

message ApplyHardwareTemplateResponse { bool Applied = 1; }

message ClaimedVehiclesGrowth {
  int64 TotalClaimedVehicles = 1;
  float GrowthPercentage = 2;
}

message CreateTemplateRequest {
  string name = 1;
  int64 parent = 2;
}

message CreateTemplateResponse { int64 Id = 1; }

message RegisterUserDeviceFromVINRequest {
  string user_device_id = 1;
  string vin = 2;
  string country_code = 3;
  bool vinConfirmed = 4;
}

message RegisterUserDeviceFromVINResponse {
  bool created = 1;
}

message VinCredential {
  string id = 1;
  google.protobuf.Timestamp expiration = 2;
}

message UpdateDeviceIntegrationStatusRequest {
  string user_device_id = 1;
  string integration_id = 2;
  string status = 3;
}

message IssueVinCredentialRequest {
  uint64 token_id = 1;
  string vin = 2;
  google.protobuf.Timestamp expires_at = 3;
}

message IssueVinCredentialResponse {
  string credential_id = 1;
}

message GetAllUserDeviceRequest {
  string wmi = 1;
}

message ClearMetaTransactionRequestsResponse {
  string id = 1;
}

message StopUserDeviceIntegrationRequest {
  string user_device_id = 1;
  string integration_id = 2;
}