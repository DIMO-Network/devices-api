// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.3
// source: pkg/grpc/user_devices.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserDeviceByAutoPIUnitIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserDeviceByAutoPIUnitIdRequest) Reset() {
	*x = GetUserDeviceByAutoPIUnitIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDeviceByAutoPIUnitIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDeviceByAutoPIUnitIdRequest) ProtoMessage() {}

func (x *GetUserDeviceByAutoPIUnitIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDeviceByAutoPIUnitIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserDeviceByAutoPIUnitIdRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserDeviceByAutoPIUnitIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUserDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserDeviceRequest) Reset() {
	*x = GetUserDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDeviceRequest) ProtoMessage() {}

func (x *GetUserDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetUserDeviceRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUserDeviceByTokenIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId int64 `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetUserDeviceByTokenIdRequest) Reset() {
	*x = GetUserDeviceByTokenIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDeviceByTokenIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDeviceByTokenIdRequest) ProtoMessage() {}

func (x *GetUserDeviceByTokenIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDeviceByTokenIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserDeviceByTokenIdRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserDeviceByTokenIdRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

type ValuationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total            float32 `protobuf:"fixed32,1,opt,name=total,proto3" json:"total,omitempty"`
	GrowthPercentage float32 `protobuf:"fixed32,2,opt,name=growthPercentage,proto3" json:"growthPercentage,omitempty"`
}

func (x *ValuationResponse) Reset() {
	*x = ValuationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuationResponse) ProtoMessage() {}

func (x *ValuationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuationResponse.ProtoReflect.Descriptor instead.
func (*ValuationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{3}
}

func (x *ValuationResponse) GetTotal() float32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ValuationResponse) GetGrowthPercentage() float32 {
	if x != nil {
		return x.GrowthPercentage
	}
	return 0
}

type UserDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                  string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                              string                   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TokenId                             *uint64                  `protobuf:"varint,3,opt,name=token_id,json=tokenId,proto3,oneof" json:"token_id,omitempty"`
	OptedInAt                           *timestamppb.Timestamp   `protobuf:"bytes,4,opt,name=opted_in_at,json=optedInAt,proto3,oneof" json:"opted_in_at,omitempty"`
	OwnerAddress                        []byte                   `protobuf:"bytes,5,opt,name=owner_address,json=ownerAddress,proto3,oneof" json:"owner_address,omitempty"`
	AftermarketDeviceTokenId            *uint64                  `protobuf:"varint,6,opt,name=aftermarket_device_token_id,json=aftermarketDeviceTokenId,proto3,oneof" json:"aftermarket_device_token_id,omitempty"`
	Integrations                        []*UserDeviceIntegration `protobuf:"bytes,7,rep,name=integrations,proto3" json:"integrations,omitempty"`
	Vin                                 *string                  `protobuf:"bytes,8,opt,name=vin,proto3,oneof" json:"vin,omitempty"`
	DeviceDefinitionId                  string                   `protobuf:"bytes,9,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	DeviceStyleId                       *string                  `protobuf:"bytes,10,opt,name=device_style_id,json=deviceStyleId,proto3,oneof" json:"device_style_id,omitempty"`
	AftermarketDeviceBeneficiaryAddress []byte                   `protobuf:"bytes,11,opt,name=aftermarket_device_beneficiary_address,json=aftermarketDeviceBeneficiaryAddress,proto3,oneof" json:"aftermarket_device_beneficiary_address,omitempty"`
	LatestVinCredential                 *VinCredential           `protobuf:"bytes,12,opt,name=latest_vin_credential,json=latestVinCredential,proto3,oneof" json:"latest_vin_credential,omitempty"`
	VinConfirmed                        bool                     `protobuf:"varint,13,opt,name=vin_confirmed,json=vinConfirmed,proto3" json:"vin_confirmed,omitempty"`
}

func (x *UserDevice) Reset() {
	*x = UserDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDevice) ProtoMessage() {}

func (x *UserDevice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDevice.ProtoReflect.Descriptor instead.
func (*UserDevice) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{4}
}

func (x *UserDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDevice) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserDevice) GetTokenId() uint64 {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return 0
}

func (x *UserDevice) GetOptedInAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OptedInAt
	}
	return nil
}

func (x *UserDevice) GetOwnerAddress() []byte {
	if x != nil {
		return x.OwnerAddress
	}
	return nil
}

func (x *UserDevice) GetAftermarketDeviceTokenId() uint64 {
	if x != nil && x.AftermarketDeviceTokenId != nil {
		return *x.AftermarketDeviceTokenId
	}
	return 0
}

func (x *UserDevice) GetIntegrations() []*UserDeviceIntegration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *UserDevice) GetVin() string {
	if x != nil && x.Vin != nil {
		return *x.Vin
	}
	return ""
}

func (x *UserDevice) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *UserDevice) GetDeviceStyleId() string {
	if x != nil && x.DeviceStyleId != nil {
		return *x.DeviceStyleId
	}
	return ""
}

func (x *UserDevice) GetAftermarketDeviceBeneficiaryAddress() []byte {
	if x != nil {
		return x.AftermarketDeviceBeneficiaryAddress
	}
	return nil
}

func (x *UserDevice) GetLatestVinCredential() *VinCredential {
	if x != nil {
		return x.LatestVinCredential
	}
	return nil
}

func (x *UserDevice) GetVinConfirmed() bool {
	if x != nil {
		return x.VinConfirmed
	}
	return false
}

type UserDeviceIntegration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status     string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // This is not great, but getting tied to the list seems worse. We may regret this.
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *UserDeviceIntegration) Reset() {
	*x = UserDeviceIntegration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeviceIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeviceIntegration) ProtoMessage() {}

func (x *UserDeviceIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeviceIntegration.ProtoReflect.Descriptor instead.
func (*UserDeviceIntegration) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{5}
}

func (x *UserDeviceIntegration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserDeviceIntegration) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserDeviceIntegration) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type UserDeviceAutoPIUnitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDeviceId       string `protobuf:"bytes,1,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	UserId             string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceDefinitionId string `protobuf:"bytes,3,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	DeviceStyleId      string `protobuf:"bytes,4,opt,name=device_style_id,json=deviceStyleId,proto3" json:"device_style_id,omitempty"`
}

func (x *UserDeviceAutoPIUnitResponse) Reset() {
	*x = UserDeviceAutoPIUnitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeviceAutoPIUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeviceAutoPIUnitResponse) ProtoMessage() {}

func (x *UserDeviceAutoPIUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeviceAutoPIUnitResponse.ProtoReflect.Descriptor instead.
func (*UserDeviceAutoPIUnitResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{6}
}

func (x *UserDeviceAutoPIUnitResponse) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *UserDeviceAutoPIUnitResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserDeviceAutoPIUnitResponse) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *UserDeviceAutoPIUnitResponse) GetDeviceStyleId() string {
	if x != nil {
		return x.DeviceStyleId
	}
	return ""
}

type ListUserDevicesForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Optional: Include any devices with NFTs owned by this address.
	EthereumAddress string `protobuf:"bytes,2,opt,name=ethereum_address,json=ethereumAddress,proto3" json:"ethereum_address,omitempty"`
}

func (x *ListUserDevicesForUserRequest) Reset() {
	*x = ListUserDevicesForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserDevicesForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserDevicesForUserRequest) ProtoMessage() {}

func (x *ListUserDevicesForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserDevicesForUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserDevicesForUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{7}
}

func (x *ListUserDevicesForUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserDevicesForUserRequest) GetEthereumAddress() string {
	if x != nil {
		return x.EthereumAddress
	}
	return ""
}

type ListUserDevicesForUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDevices []*UserDevice `protobuf:"bytes,1,rep,name=user_devices,json=userDevices,proto3" json:"user_devices,omitempty"`
}

func (x *ListUserDevicesForUserResponse) Reset() {
	*x = ListUserDevicesForUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserDevicesForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserDevicesForUserResponse) ProtoMessage() {}

func (x *ListUserDevicesForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserDevicesForUserResponse.ProtoReflect.Descriptor instead.
func (*ListUserDevicesForUserResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{8}
}

func (x *ListUserDevicesForUserResponse) GetUserDevices() []*UserDevice {
	if x != nil {
		return x.UserDevices
	}
	return nil
}

type ApplyHardwareTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserDeviceId       string `protobuf:"bytes,2,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	AutoApiUnitId      string `protobuf:"bytes,3,opt,name=auto_api_unit_id,json=autoApiUnitId,proto3" json:"auto_api_unit_id,omitempty"`
	HardwareTemplateId string `protobuf:"bytes,4,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *ApplyHardwareTemplateRequest) Reset() {
	*x = ApplyHardwareTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyHardwareTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyHardwareTemplateRequest) ProtoMessage() {}

func (x *ApplyHardwareTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyHardwareTemplateRequest.ProtoReflect.Descriptor instead.
func (*ApplyHardwareTemplateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{9}
}

func (x *ApplyHardwareTemplateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ApplyHardwareTemplateRequest) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *ApplyHardwareTemplateRequest) GetAutoApiUnitId() string {
	if x != nil {
		return x.AutoApiUnitId
	}
	return ""
}

func (x *ApplyHardwareTemplateRequest) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type ApplyHardwareTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applied bool `protobuf:"varint,1,opt,name=Applied,proto3" json:"Applied,omitempty"`
}

func (x *ApplyHardwareTemplateResponse) Reset() {
	*x = ApplyHardwareTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyHardwareTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyHardwareTemplateResponse) ProtoMessage() {}

func (x *ApplyHardwareTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyHardwareTemplateResponse.ProtoReflect.Descriptor instead.
func (*ApplyHardwareTemplateResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{10}
}

func (x *ApplyHardwareTemplateResponse) GetApplied() bool {
	if x != nil {
		return x.Applied
	}
	return false
}

type ClaimedVehiclesGrowth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalClaimedVehicles int64   `protobuf:"varint,1,opt,name=TotalClaimedVehicles,proto3" json:"TotalClaimedVehicles,omitempty"`
	GrowthPercentage     float32 `protobuf:"fixed32,2,opt,name=GrowthPercentage,proto3" json:"GrowthPercentage,omitempty"`
}

func (x *ClaimedVehiclesGrowth) Reset() {
	*x = ClaimedVehiclesGrowth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimedVehiclesGrowth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimedVehiclesGrowth) ProtoMessage() {}

func (x *ClaimedVehiclesGrowth) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimedVehiclesGrowth.ProtoReflect.Descriptor instead.
func (*ClaimedVehiclesGrowth) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{11}
}

func (x *ClaimedVehiclesGrowth) GetTotalClaimedVehicles() int64 {
	if x != nil {
		return x.TotalClaimedVehicles
	}
	return 0
}

func (x *ClaimedVehiclesGrowth) GetGrowthPercentage() float32 {
	if x != nil {
		return x.GrowthPercentage
	}
	return 0
}

type CreateTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Parent int64  `protobuf:"varint,2,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *CreateTemplateRequest) Reset() {
	*x = CreateTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateRequest) ProtoMessage() {}

func (x *CreateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTemplateRequest) GetParent() int64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

type CreateTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *CreateTemplateResponse) Reset() {
	*x = CreateTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateResponse) ProtoMessage() {}

func (x *CreateTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateTemplateResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTemplateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RegisterUserDeviceFromVINRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDeviceId string `protobuf:"bytes,1,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	Vin          string `protobuf:"bytes,2,opt,name=vin,proto3" json:"vin,omitempty"`
	CountryCode  string `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
}

func (x *RegisterUserDeviceFromVINRequest) Reset() {
	*x = RegisterUserDeviceFromVINRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserDeviceFromVINRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserDeviceFromVINRequest) ProtoMessage() {}

func (x *RegisterUserDeviceFromVINRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserDeviceFromVINRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserDeviceFromVINRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{14}
}

func (x *RegisterUserDeviceFromVINRequest) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *RegisterUserDeviceFromVINRequest) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *RegisterUserDeviceFromVINRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type RegisterUserDeviceFromVINResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created bool `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *RegisterUserDeviceFromVINResponse) Reset() {
	*x = RegisterUserDeviceFromVINResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserDeviceFromVINResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserDeviceFromVINResponse) ProtoMessage() {}

func (x *RegisterUserDeviceFromVINResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserDeviceFromVINResponse.ProtoReflect.Descriptor instead.
func (*RegisterUserDeviceFromVINResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{15}
}

func (x *RegisterUserDeviceFromVINResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

type VinCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Expiration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *VinCredential) Reset() {
	*x = VinCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VinCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VinCredential) ProtoMessage() {}

func (x *VinCredential) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VinCredential.ProtoReflect.Descriptor instead.
func (*VinCredential) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{16}
}

func (x *VinCredential) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VinCredential) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type UpdateDeviceIntegrationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDeviceId  string `protobuf:"bytes,1,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	IntegrationId string `protobuf:"bytes,2,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Status        string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateDeviceIntegrationStatusRequest) Reset() {
	*x = UpdateDeviceIntegrationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceIntegrationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceIntegrationStatusRequest) ProtoMessage() {}

func (x *UpdateDeviceIntegrationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceIntegrationStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceIntegrationStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateDeviceIntegrationStatusRequest) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *UpdateDeviceIntegrationStatusRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *UpdateDeviceIntegrationStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VinCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vin       string  `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	TokenId   uint64  `protobuf:"varint,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	ExpiresAt *string `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
}

func (x *VinCredentialRequest) Reset() {
	*x = VinCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VinCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VinCredentialRequest) ProtoMessage() {}

func (x *VinCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VinCredentialRequest.ProtoReflect.Descriptor instead.
func (*VinCredentialRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{18}
}

func (x *VinCredentialRequest) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *VinCredentialRequest) GetTokenId() uint64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *VinCredentialRequest) GetExpiresAt() string {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return ""
}

type VinCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
}

func (x *VinCredentialResponse) Reset() {
	*x = VinCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_user_devices_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VinCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VinCredentialResponse) ProtoMessage() {}

func (x *VinCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_user_devices_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VinCredentialResponse.ProtoReflect.Descriptor instead.
func (*VinCredentialResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_user_devices_proto_rawDescGZIP(), []int{19}
}

func (x *VinCredentialResponse) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

var File_pkg_grpc_user_devices_proto protoreflect.FileDescriptor

var file_pkg_grpc_user_devices_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x49, 0x55, 0x6e, 0x69,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x55,
	0x0a, 0x11, 0x56, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x72, 0x6f,
	0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0xbe, 0x06, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a,
	0x0b, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01,
	0x52, 0x09, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x1b, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52,
	0x18, 0x61, 0x66, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x15, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x03, 0x76, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x26, 0x61, 0x66, 0x74, 0x65, 0x72, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x06, 0x52, 0x23, 0x61, 0x66, 0x74, 0x65, 0x72, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x65, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x4f, 0x0a, 0x15, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x69, 0x6e, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x6e, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x07, 0x52, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x56, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e,
	0x5f, 0x61, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x76, 0x69, 0x6e, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x42, 0x29, 0x0a, 0x27, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x60, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x1c, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x49, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x63, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x58, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0xb8, 0x01, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74,
	0x6f, 0x41, 0x70, 0x69, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1d,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x22, 0x77, 0x0a, 0x15, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x12, 0x32, 0x0a, 0x14, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x22, 0x43, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22,
	0x7d, 0x0a, 0x20, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x49, 0x4e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3d,
	0x0a, 0x21, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x49, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x5b, 0x0a,
	0x0d, 0x56, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x24, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x76, 0x0a, 0x14, 0x56, 0x69, 0x6e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76,
	0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74,
	0x22, 0x3c, 0x0a, 0x15, 0x56, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x32, 0x9b,
	0x08, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x69, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x15, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x49, 0x55, 0x6e, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x41, 0x75, 0x74,
	0x6f, 0x50, 0x49, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x49, 0x55, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x47, 0x72, 0x6f,
	0x77, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x51, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x49, 0x4e, 0x12, 0x29, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x49, 0x4e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x56, 0x49, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x63, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x56, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1d, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e, 0x5a, 0x2c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x49, 0x4d, 0x4f, 0x2d,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpc_user_devices_proto_rawDescOnce sync.Once
	file_pkg_grpc_user_devices_proto_rawDescData = file_pkg_grpc_user_devices_proto_rawDesc
)

func file_pkg_grpc_user_devices_proto_rawDescGZIP() []byte {
	file_pkg_grpc_user_devices_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_user_devices_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpc_user_devices_proto_rawDescData)
	})
	return file_pkg_grpc_user_devices_proto_rawDescData
}

var file_pkg_grpc_user_devices_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_pkg_grpc_user_devices_proto_goTypes = []interface{}{
	(*GetUserDeviceByAutoPIUnitIdRequest)(nil),   // 0: devices.GetUserDeviceByAutoPIUnitIdRequest
	(*GetUserDeviceRequest)(nil),                 // 1: devices.GetUserDeviceRequest
	(*GetUserDeviceByTokenIdRequest)(nil),        // 2: devices.GetUserDeviceByTokenIdRequest
	(*ValuationResponse)(nil),                    // 3: devices.ValuationResponse
	(*UserDevice)(nil),                           // 4: devices.UserDevice
	(*UserDeviceIntegration)(nil),                // 5: devices.UserDeviceIntegration
	(*UserDeviceAutoPIUnitResponse)(nil),         // 6: devices.UserDeviceAutoPIUnitResponse
	(*ListUserDevicesForUserRequest)(nil),        // 7: devices.ListUserDevicesForUserRequest
	(*ListUserDevicesForUserResponse)(nil),       // 8: devices.ListUserDevicesForUserResponse
	(*ApplyHardwareTemplateRequest)(nil),         // 9: devices.ApplyHardwareTemplateRequest
	(*ApplyHardwareTemplateResponse)(nil),        // 10: devices.ApplyHardwareTemplateResponse
	(*ClaimedVehiclesGrowth)(nil),                // 11: devices.ClaimedVehiclesGrowth
	(*CreateTemplateRequest)(nil),                // 12: devices.CreateTemplateRequest
	(*CreateTemplateResponse)(nil),               // 13: devices.CreateTemplateResponse
	(*RegisterUserDeviceFromVINRequest)(nil),     // 14: devices.RegisterUserDeviceFromVINRequest
	(*RegisterUserDeviceFromVINResponse)(nil),    // 15: devices.RegisterUserDeviceFromVINResponse
	(*VinCredential)(nil),                        // 16: devices.VinCredential
	(*UpdateDeviceIntegrationStatusRequest)(nil), // 17: devices.UpdateDeviceIntegrationStatusRequest
	(*VinCredentialRequest)(nil),                 // 18: devices.VinCredentialRequest
	(*VinCredentialResponse)(nil),                // 19: devices.VinCredentialResponse
	(*timestamppb.Timestamp)(nil),                // 20: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                        // 21: google.protobuf.Empty
}
var file_pkg_grpc_user_devices_proto_depIdxs = []int32{
	20, // 0: devices.UserDevice.opted_in_at:type_name -> google.protobuf.Timestamp
	5,  // 1: devices.UserDevice.integrations:type_name -> devices.UserDeviceIntegration
	16, // 2: devices.UserDevice.latest_vin_credential:type_name -> devices.VinCredential
	4,  // 3: devices.ListUserDevicesForUserResponse.user_devices:type_name -> devices.UserDevice
	20, // 4: devices.VinCredential.expiration:type_name -> google.protobuf.Timestamp
	1,  // 5: devices.UserDeviceService.GetUserDevice:input_type -> devices.GetUserDeviceRequest
	2,  // 6: devices.UserDeviceService.GetUserDeviceByTokenId:input_type -> devices.GetUserDeviceByTokenIdRequest
	7,  // 7: devices.UserDeviceService.ListUserDevicesForUser:input_type -> devices.ListUserDevicesForUserRequest
	9,  // 8: devices.UserDeviceService.ApplyHardwareTemplate:input_type -> devices.ApplyHardwareTemplateRequest
	21, // 9: devices.UserDeviceService.GetAllUserDeviceValuation:input_type -> google.protobuf.Empty
	0,  // 10: devices.UserDeviceService.GetUserDeviceByAutoPIUnitId:input_type -> devices.GetUserDeviceByAutoPIUnitIdRequest
	21, // 11: devices.UserDeviceService.GetClaimedVehiclesGrowth:input_type -> google.protobuf.Empty
	12, // 12: devices.UserDeviceService.CreateTemplate:input_type -> devices.CreateTemplateRequest
	14, // 13: devices.UserDeviceService.RegisterUserDeviceFromVIN:input_type -> devices.RegisterUserDeviceFromVINRequest
	17, // 14: devices.UserDeviceService.UpdateDeviceIntegrationStatus:input_type -> devices.UpdateDeviceIntegrationStatusRequest
	18, // 15: devices.UserDeviceService.IssueVinCredential:input_type -> devices.VinCredentialRequest
	4,  // 16: devices.UserDeviceService.GetUserDevice:output_type -> devices.UserDevice
	4,  // 17: devices.UserDeviceService.GetUserDeviceByTokenId:output_type -> devices.UserDevice
	8,  // 18: devices.UserDeviceService.ListUserDevicesForUser:output_type -> devices.ListUserDevicesForUserResponse
	10, // 19: devices.UserDeviceService.ApplyHardwareTemplate:output_type -> devices.ApplyHardwareTemplateResponse
	3,  // 20: devices.UserDeviceService.GetAllUserDeviceValuation:output_type -> devices.ValuationResponse
	6,  // 21: devices.UserDeviceService.GetUserDeviceByAutoPIUnitId:output_type -> devices.UserDeviceAutoPIUnitResponse
	11, // 22: devices.UserDeviceService.GetClaimedVehiclesGrowth:output_type -> devices.ClaimedVehiclesGrowth
	13, // 23: devices.UserDeviceService.CreateTemplate:output_type -> devices.CreateTemplateResponse
	15, // 24: devices.UserDeviceService.RegisterUserDeviceFromVIN:output_type -> devices.RegisterUserDeviceFromVINResponse
	4,  // 25: devices.UserDeviceService.UpdateDeviceIntegrationStatus:output_type -> devices.UserDevice
	19, // 26: devices.UserDeviceService.IssueVinCredential:output_type -> devices.VinCredentialResponse
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_grpc_user_devices_proto_init() }
func file_pkg_grpc_user_devices_proto_init() {
	if File_pkg_grpc_user_devices_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpc_user_devices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDeviceByAutoPIUnitIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDeviceByTokenIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeviceIntegration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeviceAutoPIUnitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserDevicesForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserDevicesForUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyHardwareTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyHardwareTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimedVehiclesGrowth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterUserDeviceFromVINRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterUserDeviceFromVINResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VinCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceIntegrationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VinCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_user_devices_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VinCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_grpc_user_devices_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_pkg_grpc_user_devices_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpc_user_devices_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_user_devices_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_user_devices_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_user_devices_proto_msgTypes,
	}.Build()
	File_pkg_grpc_user_devices_proto = out.File
	file_pkg_grpc_user_devices_proto_rawDesc = nil
	file_pkg_grpc_user_devices_proto_goTypes = nil
	file_pkg_grpc_user_devices_proto_depIdxs = nil
}
