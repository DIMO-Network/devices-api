# db for local dev
version: '3.9'

services:
  postgresql:
    image: postgres:12.9-alpine # matches version used on aws environments
    container_name: pg-devices-api
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dimo
      - POSTGRES_PASSWORD=dimo
      - POSTGRES_DB=devices_api
    volumes:
      - postgresdb:/var/lib/postgresql/data:delegated

  redis:
    image: redis:6.2 # latest version on ElastiCache
    container_name: redis-devices-api
    ports:
      - "6379:6379"
    volumes:
      - redis:/data:delegated

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.3
    container_name: elasticsearch-devices-api
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:8.1.3
    container_name: kibana-devices-api
    ports:
      - "5601:5601"
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch-devices-api:9200

  localstack:
    image: localstack/localstack:latest
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - SERVICES=lambda,s3
    ports:
      - '4566-4583:4566-4583'
    volumes:
      - "${TEMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  zookeeper:
    image: 'wurstmeister/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  # Does not persist anything!
  kafka:
    image: 'wurstmeister/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  postgresdb:
    driver: local
  redis:
    driver: local